<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: template | .NET, Sitecore and setup development]]></title>
  <link href="http://yansklyarenko.github.io/blog/categories/template/atom.xml" rel="self"/>
  <link href="http://yansklyarenko.github.io/"/>
  <updated>2013-07-29T23:40:25+03:00</updated>
  <id>http://yansklyarenko.github.io/</id>
  <author>
    <name><![CDATA[Yan Sklyarenko]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Generate a solution file for a number of C# projects files in a folder]]></title>
    <link href="http://yansklyarenko.github.io/blog/2012/07/06/generate-solution-file-for-number-of-c/"/>
    <updated>2012-07-06T14:59:00+03:00</updated>
    <id>http://yansklyarenko.github.io/blog/2012/07/06/generate-solution-file-for-number-of-c</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">Some time ago I wrote my first T4 template which generates a solution (*.sln) file out of a number of C# project (*.cspoj) files, located in a folder and all descendants. Although it turned out not to be necessary to solve the task I was working on, and assuming itâ€™s quite simple, I still decided to share it for further reference. May someone can find it useful. So, below is the entire T4 template, with no extra comments:<br /><div class="wlWriterEditableSmartContent" id="scid:f32c3428-b7e9-4f15-a8ea-c502c7ff2e88:260cba0a-462d-4da5-bf82-2a4da7bd7cdf" style="display: inline; float: none; margin: 0px; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px;"><pre class="brush: c#;gutter:false;wrap-lines:false;">Microsoft Visual Studio Solution File, Format Version 11.00<br /># Visual Studio 2010<br />&lt;#@ template language="cs" hostspecific="false" #&gt;<br />&lt;#@ output extension=".sln" #&gt;<br />&lt;#@ parameter name="Folder" type="System.String" #&gt; <br />&lt;#@ assembly name="System.Core" #&gt;<br />&lt;#@ assembly name="System.Xml" #&gt;<br />&lt;#@ assembly name="System.Xml.Linq" #&gt;<br />&lt;#@ import namespace="System.IO" #&gt;<br />&lt;#@ import namespace="System.Linq" #&gt;<br />&lt;#@ import namespace="System.Xml.Linq" #&gt; <br />&lt;#<br />    if (Directory.Exists(Folder))<br />    {<br />        var csprojFiles= Directory.GetFiles(Folder, "*.csproj", SearchOption.AllDirectories);<br />        foreach (var file in csprojFiles)<br />        {<br />            ProjectFileMetaData metaData = new ProjectFileMetaData(file, Folder);<br />            WriteLine("Project(\"{3}\") = \"{0}\", \"{1}\", \"{2}\"",  metaData.Name, metaData.Path, metaData.Id, ProjectFileMetaData.ProjectTypeGuid);<br />            WriteLine("EndProject");<br />        }<br />    }<br />#&gt;<br /><br />&lt;#+ <br />    public class ProjectFileMetaData<br />    {<br />        public static string ProjectTypeGuid = "{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}";<br /><br />        public ProjectFileMetaData(string file, string root)<br />        {<br />            InitProperties(file, root);<br />        }<br /><br />        public string Name { get; set; }<br /><br />        public string Path { get; set; }<br /><br />        public string Id { get; set; }<br /><br />        private void InitProperties(string file, string root)<br />        {<br />            XDocument xDoc = XDocument.Load(file);<br />            XNamespace ns = @"http://schemas.microsoft.com/developer/msbuild/2003";<br />            XElement xElement = xDoc.Root.Elements(XName.Get("PropertyGroup", ns.NamespaceName)).First().Element(XName.Get("ProjectGuid", ns.NamespaceName));<br />            if (xElement != null)<br />            {<br />                this.Id = xElement.Value;<br />            }<br /><br />            this.Path = file.Substring(root.Length).TrimStart(new char[] { '\\' });<br /><br />            this.Name = System.IO.Path.GetFileNameWithoutExtension(file);<br />        }<br />    }<br />#&gt;</pre></div></div></div>

]]></content>
  </entry>
  
</feed>
